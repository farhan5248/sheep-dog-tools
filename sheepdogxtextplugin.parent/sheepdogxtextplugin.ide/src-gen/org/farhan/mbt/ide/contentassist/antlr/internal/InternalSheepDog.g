/*
 * generated by Xtext 2.36.0
 */
grammar InternalSheepDog;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.farhan.mbt.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.farhan.mbt.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.farhan.mbt.services.SheepDogGrammarAccess;

}
@parser::members {
	private SheepDogGrammarAccess grammarAccess;

	public void setGrammarAccess(SheepDogGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getAlternatives()); }
		(rule__Model__Alternatives)
		{ after(grammarAccess.getModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepObject
entryRuleStepObject
:
{ before(grammarAccess.getStepObjectRule()); }
	 ruleStepObject
{ after(grammarAccess.getStepObjectRule()); } 
	 EOF 
;

// Rule StepObject
ruleStepObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepObjectAccess().getGroup()); }
		(rule__StepObject__Group__0)
		{ after(grammarAccess.getStepObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepDefinition
entryRuleStepDefinition
:
{ before(grammarAccess.getStepDefinitionRule()); }
	 ruleStepDefinition
{ after(grammarAccess.getStepDefinitionRule()); } 
	 EOF 
;

// Rule StepDefinition
ruleStepDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepDefinitionAccess().getGroup()); }
		(rule__StepDefinition__Group__0)
		{ after(grammarAccess.getStepDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepParameters
entryRuleStepParameters
:
{ before(grammarAccess.getStepParametersRule()); }
	 ruleStepParameters
{ after(grammarAccess.getStepParametersRule()); } 
	 EOF 
;

// Rule StepParameters
ruleStepParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepParametersAccess().getGroup()); }
		(rule__StepParameters__Group__0)
		{ after(grammarAccess.getStepParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeature
entryRuleFeature
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureAccess().getGroup()); }
		(rule__Feature__Group__0)
		{ after(grammarAccess.getFeatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractScenario
entryRuleAbstractScenario
:
{ before(grammarAccess.getAbstractScenarioRule()); }
	 ruleAbstractScenario
{ after(grammarAccess.getAbstractScenarioRule()); } 
	 EOF 
;

// Rule AbstractScenario
ruleAbstractScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractScenarioAccess().getAlternatives()); }
		(rule__AbstractScenario__Alternatives)
		{ after(grammarAccess.getAbstractScenarioAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBackground
entryRuleBackground
:
{ before(grammarAccess.getBackgroundRule()); }
	 ruleBackground
{ after(grammarAccess.getBackgroundRule()); } 
	 EOF 
;

// Rule Background
ruleBackground 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBackgroundAccess().getGroup()); }
		(rule__Background__Group__0)
		{ after(grammarAccess.getBackgroundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenario
entryRuleScenario
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioAccess().getGroup()); }
		(rule__Scenario__Group__0)
		{ after(grammarAccess.getScenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExamples
entryRuleExamples
:
{ before(grammarAccess.getExamplesRule()); }
	 ruleExamples
{ after(grammarAccess.getExamplesRule()); } 
	 EOF 
;

// Rule Examples
ruleExamples 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExamplesAccess().getGroup()); }
		(rule__Examples__Group__0)
		{ after(grammarAccess.getExamplesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStep
entryRuleStep
:
{ before(grammarAccess.getStepRule()); }
	 ruleStep
{ after(grammarAccess.getStepRule()); } 
	 EOF 
;

// Rule Step
ruleStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepAccess().getAlternatives()); }
		(rule__Step__Alternatives)
		{ after(grammarAccess.getStepAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGiven
entryRuleGiven
:
{ before(grammarAccess.getGivenRule()); }
	 ruleGiven
{ after(grammarAccess.getGivenRule()); } 
	 EOF 
;

// Rule Given
ruleGiven 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGivenAccess().getGroup()); }
		(rule__Given__Group__0)
		{ after(grammarAccess.getGivenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhen
entryRuleWhen
:
{ before(grammarAccess.getWhenRule()); }
	 ruleWhen
{ after(grammarAccess.getWhenRule()); } 
	 EOF 
;

// Rule When
ruleWhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenAccess().getGroup()); }
		(rule__When__Group__0)
		{ after(grammarAccess.getWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThen
entryRuleThen
:
{ before(grammarAccess.getThenRule()); }
	 ruleThen
{ after(grammarAccess.getThenRule()); } 
	 EOF 
;

// Rule Then
ruleThen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenAccess().getGroup()); }
		(rule__Then__Group__0)
		{ after(grammarAccess.getThenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDocString
entryRuleDocString
:
{ before(grammarAccess.getDocStringRule()); }
	 ruleDocString
{ after(grammarAccess.getDocStringRule()); } 
	 EOF 
;

// Rule DocString
ruleDocString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocStringAccess().getGroup()); }
		(rule__DocString__Group__0)
		{ after(grammarAccess.getDocStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractScenarioTags
entryRuleAbstractScenarioTags
:
{ before(grammarAccess.getAbstractScenarioTagsRule()); }
	 ruleAbstractScenarioTags
{ after(grammarAccess.getAbstractScenarioTagsRule()); } 
	 EOF 
;

// Rule AbstractScenarioTags
ruleAbstractScenarioTags 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractScenarioTagsAccess().getGroup()); }
		(rule__AbstractScenarioTags__Group__0)
		{ after(grammarAccess.getAbstractScenarioTagsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCell
entryRuleCell
:
{ before(grammarAccess.getCellRule()); }
	 ruleCell
{ after(grammarAccess.getCellRule()); } 
	 EOF 
;

// Rule Cell
ruleCell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCellAccess().getGroup()); }
		(rule__Cell__Group__0)
		{ after(grammarAccess.getCellAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTitle
entryRuleTitle
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getTitleAccess().getWORDTerminalRuleCall()); }
			(RULE_WORD)
			{ after(grammarAccess.getTitleAccess().getWORDTerminalRuleCall()); }
		)
		(
			{ before(grammarAccess.getTitleAccess().getWORDTerminalRuleCall()); }
			(RULE_WORD)*
			{ after(grammarAccess.getTitleAccess().getWORDTerminalRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStepObjectParserRuleCall_0()); }
		ruleStepObject
		{ after(grammarAccess.getModelAccess().getStepObjectParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getFeatureParserRuleCall_1()); }
		ruleFeature
		{ after(grammarAccess.getModelAccess().getFeatureParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenario__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractScenarioAccess().getBackgroundParserRuleCall_0()); }
		ruleBackground
		{ after(grammarAccess.getAbstractScenarioAccess().getBackgroundParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractScenarioAccess().getScenarioParserRuleCall_1()); }
		ruleScenario
		{ after(grammarAccess.getAbstractScenarioAccess().getScenarioParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Step__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepAccess().getGivenParserRuleCall_0()); }
		ruleGiven
		{ after(grammarAccess.getStepAccess().getGivenParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getWhenParserRuleCall_1()); }
		ruleWhen
		{ after(grammarAccess.getStepAccess().getWhenParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getThenParserRuleCall_2()); }
		ruleThen
		{ after(grammarAccess.getStepAccess().getThenParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStepAccess().getAndParserRuleCall_3()); }
		ruleAnd
		{ after(grammarAccess.getStepAccess().getAndParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getTheStepTableAssignment_4_0()); }
		(rule__Given__TheStepTableAssignment_4_0)
		{ after(grammarAccess.getGivenAccess().getTheStepTableAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getGivenAccess().getTheDocStringAssignment_4_1()); }
		(rule__Given__TheDocStringAssignment_4_1)
		{ after(grammarAccess.getGivenAccess().getTheDocStringAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getTheStepTableAssignment_4_0()); }
		(rule__When__TheStepTableAssignment_4_0)
		{ after(grammarAccess.getWhenAccess().getTheStepTableAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getWhenAccess().getTheDocStringAssignment_4_1()); }
		(rule__When__TheDocStringAssignment_4_1)
		{ after(grammarAccess.getWhenAccess().getTheDocStringAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getTheStepTableAssignment_4_0()); }
		(rule__Then__TheStepTableAssignment_4_0)
		{ after(grammarAccess.getThenAccess().getTheStepTableAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getTheDocStringAssignment_4_1()); }
		(rule__Then__TheDocStringAssignment_4_1)
		{ after(grammarAccess.getThenAccess().getTheDocStringAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getTheStepTableAssignment_4_0()); }
		(rule__And__TheStepTableAssignment_4_0)
		{ after(grammarAccess.getAndAccess().getTheStepTableAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndAccess().getTheDocStringAssignment_4_1()); }
		(rule__And__TheDocStringAssignment_4_1)
		{ after(grammarAccess.getAndAccess().getTheDocStringAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepObject__Group__0__Impl
	rule__StepObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepObjectAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getStepObjectAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepObject__Group__1__Impl
	rule__StepObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepObjectAccess().getObjectKeyword_1()); }
	'Object:'
	{ after(grammarAccess.getStepObjectAccess().getObjectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepObject__Group__2__Impl
	rule__StepObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepObjectAccess().getNameAssignment_2()); }
	(rule__StepObject__NameAssignment_2)
	{ after(grammarAccess.getStepObjectAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepObject__Group__3__Impl
	rule__StepObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepObjectAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getStepObjectAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepObject__Group__4__Impl
	rule__StepObject__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepObjectAccess().getStatementsAssignment_4()); }
	(rule__StepObject__StatementsAssignment_4)*
	{ after(grammarAccess.getStepObjectAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepObject__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepObjectAccess().getStepDefinitionsAssignment_5()); }
	(rule__StepObject__StepDefinitionsAssignment_5)*
	{ after(grammarAccess.getStepObjectAccess().getStepDefinitionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDefinition__Group__0__Impl
	rule__StepDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDefinitionAccess().getEqualsSignEqualsSignKeyword_0()); }
	'=='
	{ after(grammarAccess.getStepDefinitionAccess().getEqualsSignEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDefinition__Group__1__Impl
	rule__StepDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDefinitionAccess().getDefinitionKeyword_1()); }
	'Definition:'
	{ after(grammarAccess.getStepDefinitionAccess().getDefinitionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDefinition__Group__2__Impl
	rule__StepDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDefinitionAccess().getNameAssignment_2()); }
	(rule__StepDefinition__NameAssignment_2)
	{ after(grammarAccess.getStepDefinitionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDefinition__Group__3__Impl
	rule__StepDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDefinitionAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getStepDefinitionAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDefinition__Group__4__Impl
	rule__StepDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDefinitionAccess().getStatementsAssignment_4()); }
	(rule__StepDefinition__StatementsAssignment_4)*
	{ after(grammarAccess.getStepDefinitionAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepDefinitionAccess().getStepParametersAssignment_5()); }
	(rule__StepDefinition__StepParametersAssignment_5)*
	{ after(grammarAccess.getStepDefinitionAccess().getStepParametersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepParameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameters__Group__0__Impl
	rule__StepParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParametersAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
	'==='
	{ after(grammarAccess.getStepParametersAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameters__Group__1__Impl
	rule__StepParameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParametersAccess().getParametersKeyword_1()); }
	'Parameters:'
	{ after(grammarAccess.getStepParametersAccess().getParametersKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameters__Group__2__Impl
	rule__StepParameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParametersAccess().getNameAssignment_2()); }
	(rule__StepParameters__NameAssignment_2)
	{ after(grammarAccess.getStepParametersAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameters__Group__3__Impl
	rule__StepParameters__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParametersAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getStepParametersAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameters__Group__4__Impl
	rule__StepParameters__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParametersAccess().getStatementsAssignment_4()); }
	(rule__StepParameters__StatementsAssignment_4)*
	{ after(grammarAccess.getStepParametersAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepParameters__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepParametersAccess().getParametersTableAssignment_5()); }
	(rule__StepParameters__ParametersTableAssignment_5)
	{ after(grammarAccess.getStepParametersAccess().getParametersTableAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__0__Impl
	rule__Feature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getFeatureAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__1__Impl
	rule__Feature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getFeatureKeyword_1()); }
	'Feature:'
	{ after(grammarAccess.getFeatureAccess().getFeatureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__2__Impl
	rule__Feature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getNameAssignment_2()); }
	(rule__Feature__NameAssignment_2)
	{ after(grammarAccess.getFeatureAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__3__Impl
	rule__Feature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getFeatureAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__4__Impl
	rule__Feature__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getStatementsAssignment_4()); }
	(rule__Feature__StatementsAssignment_4)*
	{ after(grammarAccess.getFeatureAccess().getStatementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Feature__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureAccess().getAbstractScenariosAssignment_5()); }
	(rule__Feature__AbstractScenariosAssignment_5)*
	{ after(grammarAccess.getFeatureAccess().getAbstractScenariosAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Background__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__0__Impl
	rule__Background__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getTagsAssignment_0()); }
	(rule__Background__TagsAssignment_0)?
	{ after(grammarAccess.getBackgroundAccess().getTagsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__1__Impl
	rule__Background__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getEqualsSignEqualsSignKeyword_1()); }
	'=='
	{ after(grammarAccess.getBackgroundAccess().getEqualsSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__2__Impl
	rule__Background__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getBackgroundKeyword_2()); }
	'Background:'
	{ after(grammarAccess.getBackgroundAccess().getBackgroundKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__3__Impl
	rule__Background__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getNameAssignment_3()); }
	(rule__Background__NameAssignment_3)
	{ after(grammarAccess.getBackgroundAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__4__Impl
	rule__Background__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
	{ after(grammarAccess.getBackgroundAccess().getEOLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__5__Impl
	rule__Background__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getStatementsAssignment_5()); }
	(rule__Background__StatementsAssignment_5)*
	{ after(grammarAccess.getBackgroundAccess().getStatementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Background__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBackgroundAccess().getStepsAssignment_6()); }
	(rule__Background__StepsAssignment_6)*
	{ after(grammarAccess.getBackgroundAccess().getStepsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getTagsAssignment_0()); }
	(rule__Scenario__TagsAssignment_0)?
	{ after(grammarAccess.getScenarioAccess().getTagsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getEqualsSignEqualsSignKeyword_1()); }
	'=='
	{ after(grammarAccess.getScenarioAccess().getEqualsSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_2()); }
	'Scenario:'
	{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getNameAssignment_3()); }
	(rule__Scenario__NameAssignment_3)
	{ after(grammarAccess.getScenarioAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__4__Impl
	rule__Scenario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
	{ after(grammarAccess.getScenarioAccess().getEOLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__5__Impl
	rule__Scenario__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getStatementsAssignment_5()); }
	(rule__Scenario__StatementsAssignment_5)*
	{ after(grammarAccess.getScenarioAccess().getStatementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__6__Impl
	rule__Scenario__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getStepsAssignment_6()); }
	(rule__Scenario__StepsAssignment_6)*
	{ after(grammarAccess.getScenarioAccess().getStepsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getExamplesAssignment_7()); }
	(rule__Scenario__ExamplesAssignment_7)*
	{ after(grammarAccess.getScenarioAccess().getExamplesAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Examples__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__0__Impl
	rule__Examples__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getTagsAssignment_0()); }
	(rule__Examples__TagsAssignment_0)?
	{ after(grammarAccess.getExamplesAccess().getTagsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__1__Impl
	rule__Examples__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getEqualsSignEqualsSignEqualsSignKeyword_1()); }
	'==='
	{ after(grammarAccess.getExamplesAccess().getEqualsSignEqualsSignEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__2__Impl
	rule__Examples__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getExamplesKeyword_2()); }
	'Examples:'
	{ after(grammarAccess.getExamplesAccess().getExamplesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__3__Impl
	rule__Examples__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getNameAssignment_3()); }
	(rule__Examples__NameAssignment_3)
	{ after(grammarAccess.getExamplesAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__4__Impl
	rule__Examples__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
	{ after(grammarAccess.getExamplesAccess().getEOLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__5__Impl
	rule__Examples__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getStatementsAssignment_5()); }
	(rule__Examples__StatementsAssignment_5)*
	{ after(grammarAccess.getExamplesAccess().getStatementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Examples__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExamplesAccess().getTheExamplesTableAssignment_6()); }
	(rule__Examples__TheExamplesTableAssignment_6)
	{ after(grammarAccess.getExamplesAccess().getTheExamplesTableAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__0__Impl
	rule__Given__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
	'==='
	{ after(grammarAccess.getGivenAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__1__Impl
	rule__Given__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getGivenKeyword_1()); }
	'Given:'
	{ after(grammarAccess.getGivenAccess().getGivenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__2__Impl
	rule__Given__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getNameAssignment_2()); }
	(rule__Given__NameAssignment_2)
	{ after(grammarAccess.getGivenAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__3__Impl
	rule__Given__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getGivenAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getAlternatives_4()); }
	(rule__Given__Alternatives_4)?
	{ after(grammarAccess.getGivenAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__0__Impl
	rule__When__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
	'==='
	{ after(grammarAccess.getWhenAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__1__Impl
	rule__When__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getWhenKeyword_1()); }
	'When:'
	{ after(grammarAccess.getWhenAccess().getWhenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__2__Impl
	rule__When__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getNameAssignment_2()); }
	(rule__When__NameAssignment_2)
	{ after(grammarAccess.getWhenAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__3__Impl
	rule__When__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getWhenAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getAlternatives_4()); }
	(rule__When__Alternatives_4)?
	{ after(grammarAccess.getWhenAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__0__Impl
	rule__Then__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
	'==='
	{ after(grammarAccess.getThenAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__1__Impl
	rule__Then__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getThenKeyword_1()); }
	'Then:'
	{ after(grammarAccess.getThenAccess().getThenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__2__Impl
	rule__Then__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getNameAssignment_2()); }
	(rule__Then__NameAssignment_2)
	{ after(grammarAccess.getThenAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__3__Impl
	rule__Then__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getThenAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getAlternatives_4()); }
	(rule__Then__Alternatives_4)?
	{ after(grammarAccess.getThenAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
	'==='
	{ after(grammarAccess.getAndAccess().getEqualsSignEqualsSignEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
	rule__And__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1()); }
	'And:'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__2__Impl
	rule__And__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getNameAssignment_2()); }
	(rule__And__NameAssignment_2)
	{ after(grammarAccess.getAndAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__3__Impl
	rule__And__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getAndAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAlternatives_4()); }
	(rule__And__Alternatives_4)?
	{ after(grammarAccess.getAndAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DocString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocString__Group__0__Impl
	rule__DocString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocStringAccess().getNameAssignment_0()); }
	(rule__DocString__NameAssignment_0)
	{ after(grammarAccess.getDocStringAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DocString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
	{ after(grammarAccess.getDocStringAccess().getEOLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getVerticalLineEqualsSignEqualsSignEqualsSignKeyword_0()); }
	'|==='
	{ after(grammarAccess.getTableAccess().getVerticalLineEqualsSignEqualsSignEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
	{ after(grammarAccess.getTableAccess().getEOLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTableAccess().getRowsAssignment_2()); }
		(rule__Table__RowsAssignment_2)
		{ after(grammarAccess.getTableAccess().getRowsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getTableAccess().getRowsAssignment_2()); }
		(rule__Table__RowsAssignment_2)*
		{ after(grammarAccess.getTableAccess().getRowsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getVerticalLineEqualsSignEqualsSignEqualsSignKeyword_3()); }
	'|==='
	{ after(grammarAccess.getTableAccess().getVerticalLineEqualsSignEqualsSignEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
	{ after(grammarAccess.getTableAccess().getEOLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRowAccess().getCellsAssignment_0()); }
		(rule__Row__CellsAssignment_0)
		{ after(grammarAccess.getRowAccess().getCellsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getRowAccess().getCellsAssignment_0()); }
		(rule__Row__CellsAssignment_0)*
		{ after(grammarAccess.getRowAccess().getCellsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
	{ after(grammarAccess.getRowAccess().getEOLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractScenarioTags__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractScenarioTags__Group__0__Impl
	rule__AbstractScenarioTags__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractScenarioTagsAccess().getTagsKeyword_0()); }
	'[tags='
	{ after(grammarAccess.getAbstractScenarioTagsAccess().getTagsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractScenarioTags__Group__1__Impl
	rule__AbstractScenarioTags__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractScenarioTagsAccess().getNameAssignment_1()); }
	(rule__AbstractScenarioTags__NameAssignment_1)
	{ after(grammarAccess.getAbstractScenarioTagsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractScenarioTags__Group__2__Impl
	rule__AbstractScenarioTags__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractScenarioTagsAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getAbstractScenarioTagsAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractScenarioTags__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractScenarioTagsAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
	{ after(grammarAccess.getAbstractScenarioTagsAccess().getEOLTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Cell__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cell__Group__0__Impl
	rule__Cell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellAccess().getVerticalLineKeyword_0()); }
	'|'
	{ after(grammarAccess.getCellAccess().getVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Cell__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCellAccess().getNameAssignment_1()); }
	(rule__Cell__NameAssignment_1)
	{ after(grammarAccess.getCellAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getNameAssignment_0()); }
	(rule__Statement__NameAssignment_0)
	{ after(grammarAccess.getStatementAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_1()); }
	RULE_EOL
	{ after(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepObject__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepObjectAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getStepObjectAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepObjectAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getStepObjectAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepObject__StepDefinitionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepObjectAccess().getStepDefinitionsStepDefinitionParserRuleCall_5_0()); }
		ruleStepDefinition
		{ after(grammarAccess.getStepObjectAccess().getStepDefinitionsStepDefinitionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDefinitionAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getStepDefinitionAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDefinitionAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getStepDefinitionAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepDefinition__StepParametersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepDefinitionAccess().getStepParametersStepParametersParserRuleCall_5_0()); }
		ruleStepParameters
		{ after(grammarAccess.getStepDefinitionAccess().getStepParametersStepParametersParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepParametersAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getStepParametersAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepParametersAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getStepParametersAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepParameters__ParametersTableAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepParametersAccess().getParametersTableTableParserRuleCall_5_0()); }
		ruleTable
		{ after(grammarAccess.getStepParametersAccess().getParametersTableTableParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getFeatureAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__StatementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getStatementsStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getFeatureAccess().getStatementsStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__AbstractScenariosAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureAccess().getAbstractScenariosAbstractScenarioParserRuleCall_5_0()); }
		ruleAbstractScenario
		{ after(grammarAccess.getFeatureAccess().getAbstractScenariosAbstractScenarioParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__TagsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getTagsAbstractScenarioTagsParserRuleCall_0_0()); }
		ruleAbstractScenarioTags
		{ after(grammarAccess.getBackgroundAccess().getTagsAbstractScenarioTagsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getNameTitleParserRuleCall_3_0()); }
		ruleTitle
		{ after(grammarAccess.getBackgroundAccess().getNameTitleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__StatementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getStatementsStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getBackgroundAccess().getStatementsStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Background__StepsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBackgroundAccess().getStepsStepParserRuleCall_6_0()); }
		ruleStep
		{ after(grammarAccess.getBackgroundAccess().getStepsStepParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__TagsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getTagsAbstractScenarioTagsParserRuleCall_0_0()); }
		ruleAbstractScenarioTags
		{ after(grammarAccess.getScenarioAccess().getTagsAbstractScenarioTagsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getNameTitleParserRuleCall_3_0()); }
		ruleTitle
		{ after(grammarAccess.getScenarioAccess().getNameTitleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__StatementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getStatementsStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getScenarioAccess().getStatementsStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__StepsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getStepsStepParserRuleCall_6_0()); }
		ruleStep
		{ after(grammarAccess.getScenarioAccess().getStepsStepParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ExamplesAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getExamplesExamplesParserRuleCall_7_0()); }
		ruleExamples
		{ after(grammarAccess.getScenarioAccess().getExamplesExamplesParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__TagsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getTagsAbstractScenarioTagsParserRuleCall_0_0()); }
		ruleAbstractScenarioTags
		{ after(grammarAccess.getExamplesAccess().getTagsAbstractScenarioTagsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getNameTitleParserRuleCall_3_0()); }
		ruleTitle
		{ after(grammarAccess.getExamplesAccess().getNameTitleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__StatementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getStatementsStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getExamplesAccess().getStatementsStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Examples__TheExamplesTableAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExamplesAccess().getTheExamplesTableTableParserRuleCall_6_0()); }
		ruleTable
		{ after(grammarAccess.getExamplesAccess().getTheExamplesTableTableParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getGivenAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__TheStepTableAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
		ruleTable
		{ after(grammarAccess.getGivenAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__TheDocStringAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
		ruleDocString
		{ after(grammarAccess.getGivenAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getWhenAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__TheStepTableAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
		ruleTable
		{ after(grammarAccess.getWhenAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__TheDocStringAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
		ruleDocString
		{ after(grammarAccess.getWhenAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getThenAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__TheStepTableAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
		ruleTable
		{ after(grammarAccess.getThenAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__TheDocStringAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
		ruleDocString
		{ after(grammarAccess.getThenAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getNameTitleParserRuleCall_2_0()); }
		ruleTitle
		{ after(grammarAccess.getAndAccess().getNameTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__TheStepTableAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
		ruleTable
		{ after(grammarAccess.getAndAccess().getTheStepTableTableParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__TheDocStringAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
		ruleDocString
		{ after(grammarAccess.getAndAccess().getTheDocStringDocStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DocString__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocStringAccess().getNameRAWTEXTTerminalRuleCall_0_0()); }
		RULE_RAWTEXT
		{ after(grammarAccess.getDocStringAccess().getNameRAWTEXTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RowsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getRowsRowParserRuleCall_2_0()); }
		ruleRow
		{ after(grammarAccess.getTableAccess().getRowsRowParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__CellsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getCellsCellParserRuleCall_0_0()); }
		ruleCell
		{ after(grammarAccess.getRowAccess().getCellsCellParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractScenarioTags__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractScenarioTagsAccess().getNameWORDTerminalRuleCall_1_0()); }
		RULE_WORD
		{ after(grammarAccess.getAbstractScenarioTagsAccess().getNameWORDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cell__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCellAccess().getNameTitleParserRuleCall_1_0()); }
		ruleTitle
		{ after(grammarAccess.getCellAccess().getNameTitleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getNameTitleParserRuleCall_0_0()); }
		ruleTitle
		{ after(grammarAccess.getStatementAccess().getNameTitleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_WORD : ~((' '|'\t'|'\r'|'\n'|'['|']'|'|'|'#')) ~((' '|'\t'|'\r'|'\n'|'['|']'))*;

RULE_WS : (' '|'\t'|'\r')+;

RULE_SL_COMMENT : '#' ~('\n')* RULE_EOL;

RULE_EOL : '\n'+;

RULE_RAWTEXT : '----' '\n' .+ '\n' '----';
