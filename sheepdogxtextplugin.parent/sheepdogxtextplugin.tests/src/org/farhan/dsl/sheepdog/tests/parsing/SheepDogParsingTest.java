/*
 * generated by Xtext 2.32.0
 */
package org.farhan.dsl.sheepdog.tests.parsing;

import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.farhan.dsl.sheepdog.tests.SheepDogInjectorProvider;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

@ExtendWith(InjectionExtension.class)
@InjectWith(SheepDogInjectorProvider.class)
public class SheepDogParsingTest extends ParsingTest {

	@Test
	public void parseCompleteFile() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("\n");
		sb.append("This is the description\n");
		sb.append("This is the second line of the description\n");
		sb.append("\n");

		sb.append("== Test-Setup: Setup a cardholder\n");
		sb.append("\n");
		sb.append("First setup a group\n");
		sb.append("Next setup the cardholder\n");
		sb.append("Next setup their family\n");
		sb.append("\n");

		sb.append("=== Given: do step one\n");
		sb.append("----\n");
		sb.append("Line1\n");
		sb.append("Line2\n");
		sb.append("Line3\n");
		sb.append("----\n");

		sb.append("=== And: do step two\n");

		sb.append("|===\n");
		sb.append("| Header1 | Header2 \n");
		sb.append("|   data1 |   data2 \n");
		sb.append("|===\n");

		sb.append("=== When: do step three\n");

		sb.append("|===\n");
		sb.append("| Header1 | Header2 \n");
		sb.append("|   data1 |   data2 \n");
		sb.append("|===\n");

		sb.append("=== Then: do step four\n");

		sb.append("|===\n");
		sb.append("| Header1 | Header2 \n");
		sb.append("|   data1 |   data2 \n");
		sb.append("|===\n");
		sb.append("\n");

		sb.append("[tags=\"tag1,tag2,tag3\"]\n");
		sb.append("== Test-Case: Submit a claim\n");
		sb.append("\n");
		sb.append("=== And: do step two\n");
		sb.append("\n");

		sb.append("[tags=\"tag1,tag2,tag3\"]\n");
		sb.append("== Test-Case: Submit a drug claim\n");
		sb.append("\n");
		sb.append("=== And: do step two\n");
		sb.append("=== When: do step three\n");
		sb.append("=== Then: do step four\n");
		sb.append("=== Given: do step six\n");
		sb.append("----\n");
		sb.append(" Line1\n");
		sb.append(" Line2 \n");
		sb.append("Line3 \n");
		sb.append("----\n");
		sb.append("\n");

		sb.append("[tags=\"tag1,tag2,tag3\"]\n");
		sb.append("== Test-Case: Submit a dental claim\n");
		sb.append("\n");
		sb.append("=== Given: do step one\n");
		sb.append("=== And: do step two\n");

		sb.append("|===\n");
		sb.append("| Header1 | Header2 \n");
		sb.append("|   data1 |   data2 \n");
		sb.append("|===\n");
		sb.append("=== When: do step three\n");
		sb.append("=== Then: do step four\n");
		sb.append("\n");

		sb.append("[tags=\"tag1,tag2,tag3\"]\n");
		sb.append("=== Test-Data: Describe what this data is about\n");
		sb.append("\n");
		sb.append("Put some explanation here.\n");
		sb.append("\n");

		sb.append("|===\n");
		sb.append("| Header1 | Header2 \n");
		sb.append("|   data1 |   data2 \n");
		sb.append("|   data3 |   data4 \n");
		sb.append("|===\n");
		sb.append("\n");

		sb.append("[tags=\"tag1,tag2,tag3\"]\n");
		sb.append("==  Test-Case: Submit a dental claim\n");
		sb.append("\n");
		sb.append("=== Given: do step one\n");
		sb.append("=== And: do step two\n");
		sb.append("=== When: do step three\n");
		sb.append("=== Then: do step four\n");
		sb.append("\n");

		sb.append("[tags=\"tag1,tag2,tag3\"]\n");
		sb.append("=== Test-Data: Describe what this data is about as well\n");
		sb.append("\n");
		sb.append("Put some explanation here.\n");
		sb.append("\n");

		sb.append("|===\n");
		sb.append("| Header1 | Header2 \n");
		sb.append("|   data1 |   data2 \n");
		sb.append("|   data3 |   data4 \n");
		sb.append("|===\n");
		sb.append("\n");

		sb.append("[tags=\"tag1,tag2,tag3\"]\n");
		sb.append("=== Test-Data: Describe this data too\n");
		sb.append("\n");

		sb.append("|===\n");
		sb.append("| Header1 | Header2 \n");
		sb.append("|   data1 |   data2 \n");
		sb.append("|===\n");

		sb.append("\n");
		sb.append("");
		assertNoFeatureErrors(sb);
	}

}
