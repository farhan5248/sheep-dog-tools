/*
 * generated by Xtext 2.32.0
 */
package org.farhan.dsl.sheepdog.tests.parsing;

import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.farhan.dsl.sheepdog.tests.SheepDogInjectorProvider;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

@ExtendWith(InjectionExtension.class)
@InjectWith(SheepDogInjectorProvider.class)
public class ScenarioParsingTest extends ParsingTest {

	@Test
	public void parseScenarioWithName() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("== Test-Case: Submit a claim\n");
		assertNoFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithoutName() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("== Test-Case:");
		assertFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithoutNameEOL() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("== Test-Case: Submit a claim");
		assertFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithTags() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("[tags=\"tag1\"]\n");
		sb.append("== Test-Case: Submit a claim\n");
		assertNoFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithDescription() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("== Test-Case: Submit a claim\n");
		sb.append("Basic EDI claim\n");
		assertNoFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithMultilineDescription() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("== Test-Case: Submit a claim\n");
		sb.append("Basic EDI claim\n");
		sb.append("No deductible\n");
		assertNoFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithoutDescriptionEOL() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("== Test-Case: Submit a claim\n");
		sb.append("Basic EDI claim");
		assertFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithSteps() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("== Test-Case: Submit a claim\n");
		sb.append("=== Given: do step one\n");
		sb.append("=== When: do step three\n");
		assertNoFeatureErrors(sb);
	}

	@Test
	public void parseScenarioWithEverything() throws Exception {
		StringBuilder sb = new StringBuilder();
		sb.append("= Test-Suite: This is a test feature\n");
		sb.append("[tags=\"tag1\"]\n");
		sb.append("== Test-Case: Submit a claim\n");
		sb.append("Basic EDI claim\n");
		sb.append("No deductible\n");
		sb.append("=== Given: do step one\n");
		sb.append("=== When: do step three\n");
		assertNoFeatureErrors(sb);
	}
}
